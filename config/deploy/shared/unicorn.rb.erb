root        = '/var/www/apps/mega_test'
rails_root  = "#{root}/current"

pidfile     = "#{root}/shared/tmp/pids/unicorn.pid"
pidfile_old = pidfile + '.oldbin'
pid pidfile

worker_processes 1
preload_app true
timeout 30

listen "#{root}/shared/tmp/sockets/unicorn.sock", backlog: 1024

stderr_path "#{rails_root}/log/unicorn_error.log"
stdout_path "#{rails_root}/log/unicorn.log"

GC.copy_on_write_friendly = true if GC.respond_to?(:copy_on_write_friendly=)

before_exec do |server|
  ENV['BUNDLE_GEMFILE'] = "#{rails_root}/Gemfile"
end

before_fork do |server, worker|
  if defined?(ActiveRecord::Base)
    ActiveRecord::Base.connection_proxy.instance_variable_get(:@shards).each do |shard, connection_pool|
      connection_pool.disconnect!
    end

    ActiveRecord::Base.connection.disconnect!
  end

  if File.exists?(pidfile_old) && server.pid != pidfile_old
    begin
      Process.kill('QUIT', File.read(pidfile_old).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
    end
  end
end

after_fork do |server, worker|
  if defined?(ActiveRecord::Base)
    ActiveRecord::Base.establish_connection
    ActiveRecord::Base.connection_proxy.instance_variable_get(:@shards).each {|k,v| v.clear_reloadable_connections! }
  end
end
